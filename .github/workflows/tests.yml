name: Build and Test

on:
  push:
    branches:
      - "main"
      - "master"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
      - "master"

# Add permissions block at workflow level
permissions:
  contents: write
  packages: write

jobs:
  test-on-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install system dependencies (for tkinter)
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s tests

  build-for-windows:
    name: Build for Windows
    needs: [test-on-ubuntu]
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true

      - name: Create and activate conda environment
        run: |
          conda create --name build-env --yes
          conda activate build-env

      - name: Install dependencies
        run: |
          conda install --file requirements.txt

      - name: Locate Tcl/Tk paths
        id: locate-tcl-tk
        run: |
          echo "::set-output name=tcl_path::$(conda info --base)/envs/build-env/Library/lib/tcl8.6"
          echo "::set-output name=tk_path::$(conda info --base)/envs/build-env/Library/lib/tk8.6"

      - name: Build .exe using PyInstaller
        run: |
          pyinstaller --clean --onefile --noconsole \
            --add-data "${{ steps.locate-tcl-tk.outputs.tcl_path }};./tcl8.6" \
            --add-data "${{ steps.locate-tcl-tk.outputs.tk_path }};./tk8.6" \
            annotator.py

      - name: Upload Windows .exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: MiniAnnotator-Windows-Executable
          path: dist/annotator.exe

  release:
    name: Create Release (On Version Tag)
    needs: [build-for-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Download .exe artifact
        uses: actions/download-artifact@v4
        with:
          name: MiniAnnotator-Windows-Executable
          path: ./dist

      - name: Zip the dist folder
        run: |
          cd dist
          zip -r MiniAnnotator-Windows.zip .

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/MiniAnnotator-Windows.zip
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false